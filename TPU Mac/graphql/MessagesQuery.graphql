fragment StandardEmbed on EmbedDataV2 {
  media {
    url
    proxyUrl
    attachment
    width
    height
    isInternal
    videoEmbedUrl
    upload {
      id
      createdAt
      attachment
      userId
      name
      type
      fileSize
    }
    mimeType
    type
  }
  text {
    imageProxyUrl
    text
    heading
    imageUrl
  }
  metadata {
    url
    siteName
    siteIcon
    footer
    type
    id
    restricted
  }
}

subscription UpdateMessages {
  onMessage {
    mention
    message {
      id
      createdAt
      updatedAt
      chatId
      userId
      content
      type
      emoji {
        name
        icon
        id
        chatId
      }
      embeds {
        ...StandardEmbed
      }
      reply {
        readReceipts {
          user {
            id
            avatar
            username
            legacy
          }
        }
        content
        userId
        id
        embeds {
          metadata {
            type
          }
          media {
            type
          }
        }
        user {
          username
          id
          avatar
        }
      }
      user {
        username
        id
        avatar
      }
      edited
      editedAt
      replyId
      pinned
      readReceipts {
        user {
          id
          avatar
          username
          legacy
        }
      }
    }
    chat {
      id
      recipient {
        id
        username
      }
      type
    }
  }
}

subscription EditedMessage {
    onEditMessage {
      message {
        content
        userId
        pending
        error
        edited
        id
        pinned
        editedAt
        embeds {
          ...StandardEmbed
        }
        emoji {
          id
          chatId
          name
          icon
        }
      }
    }
  }

fragment StandardMessage on Message {
  id
  createdAt
  updatedAt
  chatId
  userId
  content
  type
  emoji {
    name
    icon
    id
    chatId
  }
  embeds {
    ...StandardEmbed
  }
  reply {
    content
    userId
    id
    embeds {
      metadata {
        type
      }
      media {
        type
      }
    }
    user {
      username
      id
      avatar
    }
  }
  user {
    username
    id
    avatar
  }
  edited
  editedAt
  replyId
  pinned
  readReceipts {
    user {
      id
      avatar
      username
      legacy
    }
  }
}

query Messages($input: InfiniteMessagesInput!) {
  messages(input: $input) {
    ...StandardMessage
  }
}

query PagedMessages($input: PagedMessagesInput!) {
  messagesPaged(input: $input) {
    items {
      ...StandardMessage
    }
    pager {
      ...PagerFragment
    }
  }
}
